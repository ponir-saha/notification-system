services:

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - microservices-net

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - microservices-net

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: userdb
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: useradmin
      MYSQL_PASSWORD: secret
    ports:
      - "3307:3306"
    networks:
      - microservices-net
    volumes:
      - ./mysql/conf.d/my.cnf:/etc/mysql/conf.d/my.cnf

  redis:
    image: redis:7
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - microservices-net

  discovery-service:
    build:
      context: ./discovery-service
    container_name: discovery-service
    ports:
      - "8761:8761"
    networks:
      - microservices-net

  config-server:
    build:
      context: ./config-server
    container_name: config-server
    depends_on:
      - discovery-service
    ports:
      - "8888:8888"
    networks:
      - microservices-net
    environment:
      SPRING_PROFILES_ACTIVE: docker

  user-service:
    build:
      context: ./user-service
    container_name: user-service
    depends_on:
      - mysql
      - redis
      - kafka
      - config-server
      - discovery-service
    ports:
      - "8082:8082"
    networks:
      - microservices-net
    environment:
      SPRING_PROFILES_ACTIVE: docker

networks:
  microservices-net:
    driver: bridge